# ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weatherly-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'  # Changed to HTTPS only
    alb.ingress.kubernetes.io/certificate-arn: <your-certificate-arn>  # We'll add this after creating certificate
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01  # Modern SSL policy
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/success-codes: "200-399"
    alb.ingress.kubernetes.io/group.name: "weatherly"
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    # CORS configurations
    alb.ingress.kubernetes.io/cors-allow-headers: "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
    alb.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    alb.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-svc
            port:
              number: 5000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: backend-svc
            port:
              number: 5000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-svc
            port:
              number: 80